{
	"info": {
		"_postman_id": "166e8b4d-10fb-40cf-9051-6796d5c5a579",
		"name": "Actividad",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32617270",
		"_collection_link": "https://parcial-4365.postman.co/workspace/fecad9d0-38a8-4bf5-a9ff-f917b74d15a6/collection/32617270-166e8b4d-10fb-40cf-9051-6796d5c5a579?action=share&source=collection_link&creator=32617270"
	},
	"item": [
		{
			"name": "Crear actividad",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"actividad_id\", data.id);\r",
							"\r",
							"const OBJ = {\r",
							"    \"id\": 1,\r",
							"    \"titulo\": \"Actividad 1: creando una API!\",\r",
							"    \"fecha\": \"24-06-2025\",\r",
							"    \"cupoMaximo\": 1,\r",
							"    \"estado\": 0\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test('Object is the expected', function () {\r",
							"    let obj = pm.response.json();\r",
							"    pm.expect(obj).to.be.eql(OBJ);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Actividad 1: creando una API!\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/actividades/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						""
					]
				}
			},
			"response": [
				{
					"name": "Crear actividad",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Actividad 1: creando una API!\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/actividades/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								""
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\n    \"id\": 1,\n    \"titulo\": \"Actividad 1: creando una API!\",\n    \"fecha\": \"24-06-2025\",\n    \"cupoMaximo\": 1,\n    \"estado\": 0\n}"
				}
			]
		},
		{
			"name": "Crear actividad (Titulo no valido)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"actividad_id\", data.id);\r",
							"\r",
							"const OBJ = {\r",
							"    \"statusCode\": 412,\r",
							"    \"message\": \"El titulo debe ser de al menos 15 caracteres\"\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test('Object is the expected', function () {\r",
							"    let obj = pm.response.json();\r",
							"    pm.expect(obj).to.be.eql(OBJ);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Actividad 1\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/actividades/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						""
					]
				}
			},
			"response": [
				{
					"name": "Titulo con longitud insuficiente",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Actividad 1\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/actividades/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								""
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El titulo debe ser de al menos 15 caracteres\"\n}"
				}
			]
		},
		{
			"name": "Crear actividad (Estado no valido)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"actividad_id\", data.id);\r",
							"\r",
							"const OBJ = {\r",
							"    \"statusCode\": 412,\r",
							"    \"message\": \"El estado de la actividad no es valido: toda actividad debe crearse como abierta\"\r",
							"};\r",
							"\r",
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test('Object is the expected', function () {\r",
							"    let obj = pm.response.json();\r",
							"    pm.expect(obj).to.be.eql(OBJ);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"titulo\": \"Actividad 1: creando una API!\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/actividades/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						""
					]
				}
			},
			"response": [
				{
					"name": "Estado de la actividad no valido",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"titulo\": \"Actividad 1: creando una API!\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/actividades/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								""
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El estado de la actividad no es valido: toda actividad debe crearse como abierta\"\n}"
				}
			]
		},
		{
			"name": "Cambiar estado actividad",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test('change succesfully the state of the activity to two', function() {\r",
							"    response = pm.response.json();\r",
							"    pm.expect(response.estado).to.be.eql(2);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"estado\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/actividades/1/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Cambiar estado actividad",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/actividades/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								"1",
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "{\r\n    \"id\": 1,\r\n    \"titulo\": \"Actividad 1: creando una API!\",\r\n    \"fecha\": \"24-06-2025\",\r\n    \"cupoMaximo\": 1,\r\n    \"estado\": 2,\r\n    \"estudiantes\": [\r\n        {\r\n            \"id\": 1,\r\n            \"nombre\": \"Camilo\",\r\n            \"cedula\": 1070938485,\r\n            \"correo\": \"garcia.c@uniandes.edu.co\",\r\n            \"programa\": \"ISIS\",\r\n            \"semestre\": 3\r\n        }\r\n    ]\r\n}"
				}
			]
		},
		{
			"name": "Cambiar estado actividad (Estado no valido)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"const OBJ = {\r",
							"    \"statusCode\": 412,\r",
							"    \"message\": \"El estado no es valido\"\r",
							"};\r",
							"\r",
							"pm.test('change succesfully the state of the activity to two', function() {\r",
							"    response = pm.response.json();\r",
							"    pm.expect(response).to.be.eql(OBJ);\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"estado\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/actividades/1/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						"1",
						""
					]
				}
			},
			"response": [
				{
					"name": "Estado no valido",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"estado\": 4\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/actividades/1/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								"1",
								""
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"El estado no es valido\"\n}"
				}
			]
		},
		{
			"name": "Obtener actividades por fecha",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let data = pm.response.json()\r",
							"\r",
							"pm.test('Number of actividades > ' + 1, function () {\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actividades/24-06-2025",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						"24-06-2025"
					]
				}
			},
			"response": [
				{
					"name": "Obtener actividades por fecha",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actividades/24-06-2025",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								"24-06-2025"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [
						{
							"expires": "Invalid Date"
						}
					],
					"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"titulo\": \"Actividad 1: creando una API!\",\r\n        \"fecha\": \"24-06-2025\",\r\n        \"cupoMaximo\": 1,\r\n        \"estado\": 0\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Obtener actividades por fecha (Sin actividades)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let data = pm.response.json()\r",
							"\r",
							"const OBJ = {\r",
							"    \"statusCode\": 404,\r",
							"    \"message\": \"no hay actividades\"\r",
							"};\r",
							"\r",
							"pm.test('The object is equal as the expected', function () {\r",
							"   pm.expect(data).to.be.eql(OBJ);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/actividades/30-06-2025",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"actividades",
						"30-06-2025"
					]
				}
			},
			"response": [
				{
					"name": "Fecha sin actividades",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actividades/30-06-2025",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actividades",
								"30-06-2025"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"no hay actividades\"\n}"
				}
			]
		}
	]
}